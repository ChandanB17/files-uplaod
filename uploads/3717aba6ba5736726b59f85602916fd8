const renderSelectedSevaModal = () => {
    if (!selectedSeva) return null;

    const languageKey = `name${selectedLanguage.charAt(0).toUpperCase()}${selectedLanguage.slice(1)}`;

    return (
      <div className="fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center">
        <div className="bg-white p-8 rounded-md shadow-md">
          <h2 className="text-2xl font-semibold mb-4 text-center">{selectedSeva[languageKey]}</h2>
          <p className="text-gray-700 mb-4">{selectedSeva.content}</p>
          <p className="text-green-600 font-bold">Price: Rs. {selectedSeva.price}</p>
          <button
            className="mt-4 bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600"
            onClick={() => setSelectedSeva(null)}
          >
            Close
          </button>
        </div>
      </div>
    );
  };

  return (
    <div className="container mx-auto md:p-10">
      <h1 className="text-3xl font-bold mb-4 text-center" style={{ marginTop: '50px' }}>
        {selectedLanguage === "english"
          ? "Shree Basaveshwara Temple"
          : selectedLanguage === "Kannada"
          ? "ಶ್ರೀ ಬಸವೇಶ್ವರ ದೇವಸ್ಥಾನ"
          : selectedLanguage === "hindi"
          ? "श्री बसवेश्वर मंदिर"
          : "Shree Basaveshwara Temple"}
      </h1>
      <div className="md:flex">
        {renderSevaList()}
        <div className={`md:w-1/2 ${isDrawerOpen ? '' : 'hidden'}`}>
          <div className="flex justify-end p-4">
            <button
              className="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600"
              onClick={handleToggleDrawer}
            >
              {isDrawerOpen ? 'Close' : 'Open'} Seva List
            </button>
          </div>
        </div>
        {renderSelectedSevaModal()}
      </div>
    </div>
  );
};
